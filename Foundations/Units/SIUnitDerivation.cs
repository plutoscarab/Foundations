
/*
SIUnitDerivation.cs

Copyright © 2016 Pluto Scarab Software. Most Rights Reserved.
Author: Bret Mulvey

This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License. 
To view a copy of this license, visit http://creativecommons.org/licenses/by-sa/4.0/.

THIS IS AN AUTO-GENERATED SOURCE FILE. DO NOT EDIT THIS FILE DIRECTLY.
INSTEAD, EDIT THE .tt FILE WITH THE SAME NAME AND RE-RUN THE TEXT TEMPLATING
FILE GENERATOR. IF YOU SAVE THE FILE IN VISUAL STUDIO IT WILL DO THIS FOR YOU.
*/

using System;

namespace Foundations.Units
{
    public sealed partial class SI
    {
		/// <summary>
	    /// SI unit "Metre".
	    /// </summary>
		public static readonly SIUnit Metre = new SIUnit(Instance.Value, 1, 0, 0, 0, 0, 0, 0);

		/// <summary>
	    /// Square SI.Metre.
	    /// </summary>
		public static readonly SIUnit SquareMetre = new SIUnit(Instance.Value, 2, 0, 0, 0, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Metre.
	    /// </summary>
		public static readonly SIUnit CubicMetre = new SIUnit(Instance.Value, 3, 0, 0, 0, 0, 0, 0);

		/// <summary>
	    /// SI unit "Kilogram".
	    /// </summary>
		public static readonly SIUnit Kilogram = new SIUnit(Instance.Value, 0, 1, 0, 0, 0, 0, 0);

		/// <summary>
	    /// Square SI.Kilogram.
	    /// </summary>
		public static readonly SIUnit SquareKilogram = new SIUnit(Instance.Value, 0, 2, 0, 0, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Kilogram.
	    /// </summary>
		public static readonly SIUnit CubicKilogram = new SIUnit(Instance.Value, 0, 3, 0, 0, 0, 0, 0);

		/// <summary>
	    /// SI unit "Second".
	    /// </summary>
		public static readonly SIUnit Second = new SIUnit(Instance.Value, 0, 0, 1, 0, 0, 0, 0);

		/// <summary>
	    /// Square SI.Second.
	    /// </summary>
		public static readonly SIUnit SquareSecond = new SIUnit(Instance.Value, 0, 0, 2, 0, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Second.
	    /// </summary>
		public static readonly SIUnit CubicSecond = new SIUnit(Instance.Value, 0, 0, 3, 0, 0, 0, 0);

		/// <summary>
	    /// SI unit "Hertz".
	    /// </summary>
		public static readonly SIUnit Hertz = new SIUnit(Instance.Value, 0, 0, -1, 0, 0, 0, 0);

		/// <summary>
	    /// Square SI.Hertz.
	    /// </summary>
		public static readonly SIUnit SquareHertz = new SIUnit(Instance.Value, 0, 0, -2, 0, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Hertz.
	    /// </summary>
		public static readonly SIUnit CubicHertz = new SIUnit(Instance.Value, 0, 0, -3, 0, 0, 0, 0);

		/// <summary>
	    /// SI unit "Ampere".
	    /// </summary>
		public static readonly SIUnit Ampere = new SIUnit(Instance.Value, 0, 0, 0, 1, 0, 0, 0);

		/// <summary>
	    /// Square SI.Ampere.
	    /// </summary>
		public static readonly SIUnit SquareAmpere = new SIUnit(Instance.Value, 0, 0, 0, 2, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Ampere.
	    /// </summary>
		public static readonly SIUnit CubicAmpere = new SIUnit(Instance.Value, 0, 0, 0, 3, 0, 0, 0);

		/// <summary>
	    /// SI unit "Kelvin".
	    /// </summary>
		public static readonly SIUnit Kelvin = new SIUnit(Instance.Value, 0, 0, 0, 0, 1, 0, 0);

		/// <summary>
	    /// Square SI.Kelvin.
	    /// </summary>
		public static readonly SIUnit SquareKelvin = new SIUnit(Instance.Value, 0, 0, 0, 0, 2, 0, 0);

		/// <summary>
	    /// Cubic SI.Kelvin.
	    /// </summary>
		public static readonly SIUnit CubicKelvin = new SIUnit(Instance.Value, 0, 0, 0, 0, 3, 0, 0);

		/// <summary>
	    /// SI unit "Mole".
	    /// </summary>
		public static readonly SIUnit Mole = new SIUnit(Instance.Value, 0, 0, 0, 0, 0, 1, 0);

		/// <summary>
	    /// Square SI.Mole.
	    /// </summary>
		public static readonly SIUnit SquareMole = new SIUnit(Instance.Value, 0, 0, 0, 0, 0, 2, 0);

		/// <summary>
	    /// Cubic SI.Mole.
	    /// </summary>
		public static readonly SIUnit CubicMole = new SIUnit(Instance.Value, 0, 0, 0, 0, 0, 3, 0);

		/// <summary>
	    /// SI unit "Candela".
	    /// </summary>
		public static readonly SIUnit Candela = new SIUnit(Instance.Value, 0, 0, 0, 0, 0, 0, 1);

		/// <summary>
	    /// Square SI.Candela.
	    /// </summary>
		public static readonly SIUnit SquareCandela = new SIUnit(Instance.Value, 0, 0, 0, 0, 0, 0, 2);

		/// <summary>
	    /// Cubic SI.Candela.
	    /// </summary>
		public static readonly SIUnit CubicCandela = new SIUnit(Instance.Value, 0, 0, 0, 0, 0, 0, 3);

		/// <summary>
	    /// SI unit "Joule".
	    /// </summary>
		public static readonly SIUnit Joule = new SIUnit(Instance.Value, 2, 1, -2, 0, 0, 0, 0);

		/// <summary>
	    /// Square SI.Joule.
	    /// </summary>
		public static readonly SIUnit SquareJoule = new SIUnit(Instance.Value, 4, 2, -4, 0, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Joule.
	    /// </summary>
		public static readonly SIUnit CubicJoule = new SIUnit(Instance.Value, 6, 3, -6, 0, 0, 0, 0);

		/// <summary>
	    /// SI unit "Watt".
	    /// </summary>
		public static readonly SIUnit Watt = new SIUnit(Instance.Value, 2, 1, -3, 0, 0, 0, 0);

		/// <summary>
	    /// Square SI.Watt.
	    /// </summary>
		public static readonly SIUnit SquareWatt = new SIUnit(Instance.Value, 4, 2, -6, 0, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Watt.
	    /// </summary>
		public static readonly SIUnit CubicWatt = new SIUnit(Instance.Value, 6, 3, -9, 0, 0, 0, 0);

		/// <summary>
	    /// SI unit "Coulomb".
	    /// </summary>
		public static readonly SIUnit Coulomb = new SIUnit(Instance.Value, 0, 1, 0, 1, 0, 0, 0);

		/// <summary>
	    /// Square SI.Coulomb.
	    /// </summary>
		public static readonly SIUnit SquareCoulomb = new SIUnit(Instance.Value, 0, 2, 0, 2, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Coulomb.
	    /// </summary>
		public static readonly SIUnit CubicCoulomb = new SIUnit(Instance.Value, 0, 3, 0, 3, 0, 0, 0);

		/// <summary>
	    /// SI unit "Volt".
	    /// </summary>
		public static readonly SIUnit Volt = new SIUnit(Instance.Value, 2, 1, -3, -1, 0, 0, 0);

		/// <summary>
	    /// Square SI.Volt.
	    /// </summary>
		public static readonly SIUnit SquareVolt = new SIUnit(Instance.Value, 4, 2, -6, -2, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Volt.
	    /// </summary>
		public static readonly SIUnit CubicVolt = new SIUnit(Instance.Value, 6, 3, -9, -3, 0, 0, 0);

		/// <summary>
	    /// SI unit "Farad".
	    /// </summary>
		public static readonly SIUnit Farad = new SIUnit(Instance.Value, -2, -1, 4, 2, 0, 0, 0);

		/// <summary>
	    /// Square SI.Farad.
	    /// </summary>
		public static readonly SIUnit SquareFarad = new SIUnit(Instance.Value, -4, -2, 8, 4, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Farad.
	    /// </summary>
		public static readonly SIUnit CubicFarad = new SIUnit(Instance.Value, -6, -3, 12, 6, 0, 0, 0);

		/// <summary>
	    /// SI unit "Ohm".
	    /// </summary>
		public static readonly SIUnit Ohm = new SIUnit(Instance.Value, 2, 1, -3, -2, 0, 0, 0);

		/// <summary>
	    /// Square SI.Ohm.
	    /// </summary>
		public static readonly SIUnit SquareOhm = new SIUnit(Instance.Value, 4, 2, -6, -4, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Ohm.
	    /// </summary>
		public static readonly SIUnit CubicOhm = new SIUnit(Instance.Value, 6, 3, -9, -6, 0, 0, 0);

		/// <summary>
	    /// SI unit "Siemens".
	    /// </summary>
		public static readonly SIUnit Siemens = new SIUnit(Instance.Value, -2, -1, 3, 2, 0, 0, 0);

		/// <summary>
	    /// Square SI.Siemens.
	    /// </summary>
		public static readonly SIUnit SquareSiemens = new SIUnit(Instance.Value, -4, -2, 6, 4, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Siemens.
	    /// </summary>
		public static readonly SIUnit CubicSiemens = new SIUnit(Instance.Value, -6, -3, 9, 6, 0, 0, 0);

		/// <summary>
	    /// SI unit "Henry".
	    /// </summary>
		public static readonly SIUnit Henry = new SIUnit(Instance.Value, 2, 1, -2, -2, 0, 0, 0);

		/// <summary>
	    /// Square SI.Henry.
	    /// </summary>
		public static readonly SIUnit SquareHenry = new SIUnit(Instance.Value, 4, 2, -4, -4, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Henry.
	    /// </summary>
		public static readonly SIUnit CubicHenry = new SIUnit(Instance.Value, 6, 3, -6, -6, 0, 0, 0);

		/// <summary>
	    /// SI unit "Weber".
	    /// </summary>
		public static readonly SIUnit Weber = new SIUnit(Instance.Value, 2, 1, -2, -1, 0, 0, 0);

		/// <summary>
	    /// Square SI.Weber.
	    /// </summary>
		public static readonly SIUnit SquareWeber = new SIUnit(Instance.Value, 4, 2, -4, -2, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Weber.
	    /// </summary>
		public static readonly SIUnit CubicWeber = new SIUnit(Instance.Value, 6, 3, -6, -3, 0, 0, 0);

		/// <summary>
	    /// SI unit "Tesla".
	    /// </summary>
		public static readonly SIUnit Tesla = new SIUnit(Instance.Value, 0, 1, -2, -1, 0, 0, 0);

		/// <summary>
	    /// Square SI.Tesla.
	    /// </summary>
		public static readonly SIUnit SquareTesla = new SIUnit(Instance.Value, 0, 2, -4, -2, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Tesla.
	    /// </summary>
		public static readonly SIUnit CubicTesla = new SIUnit(Instance.Value, 0, 3, -6, -3, 0, 0, 0);

		/// <summary>
	    /// SI unit "Newton".
	    /// </summary>
		public static readonly SIUnit Newton = new SIUnit(Instance.Value, 1, 1, -2, 0, 0, 0, 0);

		/// <summary>
	    /// Square SI.Newton.
	    /// </summary>
		public static readonly SIUnit SquareNewton = new SIUnit(Instance.Value, 2, 2, -4, 0, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Newton.
	    /// </summary>
		public static readonly SIUnit CubicNewton = new SIUnit(Instance.Value, 3, 3, -6, 0, 0, 0, 0);

		/// <summary>
	    /// SI unit "Pascal".
	    /// </summary>
		public static readonly SIUnit Pascal = new SIUnit(Instance.Value, -1, 1, -2, 0, 0, 0, 0);

		/// <summary>
	    /// Square SI.Pascal.
	    /// </summary>
		public static readonly SIUnit SquarePascal = new SIUnit(Instance.Value, -2, 2, -4, 0, 0, 0, 0);

		/// <summary>
	    /// Cubic SI.Pascal.
	    /// </summary>
		public static readonly SIUnit CubicPascal = new SIUnit(Instance.Value, -3, 3, -6, 0, 0, 0, 0);

		/// <summary>
	    /// SI unit "Lux".
	    /// </summary>
		public static readonly SIUnit Lux = new SIUnit(Instance.Value, -2, 0, 0, 0, 0, 0, 1);

		/// <summary>
	    /// Square SI.Lux.
	    /// </summary>
		public static readonly SIUnit SquareLux = new SIUnit(Instance.Value, -4, 0, 0, 0, 0, 0, 2);

		/// <summary>
	    /// Cubic SI.Lux.
	    /// </summary>
		public static readonly SIUnit CubicLux = new SIUnit(Instance.Value, -6, 0, 0, 0, 0, 0, 3);

    }

	public sealed partial class SIUnit
	{
		/// <summary>
		/// Multiply by SI.Metre.
		/// </summary>
		public SIUnit Metre => (SIUnit)(this * SI.Metre);

		/// <summary>
		/// Multiply by square SI.Metre.
		/// </summary>
		public SIUnit SquareMetre => (SIUnit)(this * SI.SquareMetre);

		/// <summary>
		/// Multiply by cubic SI.Metre.
		/// </summary>
		public SIUnit CubicMetre => (SIUnit)(this * SI.CubicMetre);

		/// <summary>
		/// Divide by SI.Metre.
		/// </summary>
		public SIUnit PerMetre => (SIUnit)(this / SI.Metre);

		/// <summary>
		/// Divide by square SI.Metre.
		/// </summary>
		public SIUnit PerSquareMetre => (SIUnit)(this / SI.SquareMetre);

		/// <summary>
		/// Divide by cubic SI.Metre.
		/// </summary>
		public SIUnit PerCubicMetre => (SIUnit)(this / SI.CubicMetre);

		/// <summary>
		/// Multiply by SI.Kilogram.
		/// </summary>
		public SIUnit Kilogram => (SIUnit)(this * SI.Kilogram);

		/// <summary>
		/// Multiply by square SI.Kilogram.
		/// </summary>
		public SIUnit SquareKilogram => (SIUnit)(this * SI.SquareKilogram);

		/// <summary>
		/// Multiply by cubic SI.Kilogram.
		/// </summary>
		public SIUnit CubicKilogram => (SIUnit)(this * SI.CubicKilogram);

		/// <summary>
		/// Divide by SI.Kilogram.
		/// </summary>
		public SIUnit PerKilogram => (SIUnit)(this / SI.Kilogram);

		/// <summary>
		/// Divide by square SI.Kilogram.
		/// </summary>
		public SIUnit PerSquareKilogram => (SIUnit)(this / SI.SquareKilogram);

		/// <summary>
		/// Divide by cubic SI.Kilogram.
		/// </summary>
		public SIUnit PerCubicKilogram => (SIUnit)(this / SI.CubicKilogram);

		/// <summary>
		/// Multiply by SI.Second.
		/// </summary>
		public SIUnit Second => (SIUnit)(this * SI.Second);

		/// <summary>
		/// Multiply by square SI.Second.
		/// </summary>
		public SIUnit SquareSecond => (SIUnit)(this * SI.SquareSecond);

		/// <summary>
		/// Multiply by cubic SI.Second.
		/// </summary>
		public SIUnit CubicSecond => (SIUnit)(this * SI.CubicSecond);

		/// <summary>
		/// Divide by SI.Second.
		/// </summary>
		public SIUnit PerSecond => (SIUnit)(this / SI.Second);

		/// <summary>
		/// Divide by square SI.Second.
		/// </summary>
		public SIUnit PerSquareSecond => (SIUnit)(this / SI.SquareSecond);

		/// <summary>
		/// Divide by cubic SI.Second.
		/// </summary>
		public SIUnit PerCubicSecond => (SIUnit)(this / SI.CubicSecond);

		/// <summary>
		/// Multiply by SI.Hertz.
		/// </summary>
		public SIUnit Hertz => (SIUnit)(this * SI.Hertz);

		/// <summary>
		/// Multiply by square SI.Hertz.
		/// </summary>
		public SIUnit SquareHertz => (SIUnit)(this * SI.SquareHertz);

		/// <summary>
		/// Multiply by cubic SI.Hertz.
		/// </summary>
		public SIUnit CubicHertz => (SIUnit)(this * SI.CubicHertz);

		/// <summary>
		/// Divide by SI.Hertz.
		/// </summary>
		public SIUnit PerHertz => (SIUnit)(this / SI.Hertz);

		/// <summary>
		/// Divide by square SI.Hertz.
		/// </summary>
		public SIUnit PerSquareHertz => (SIUnit)(this / SI.SquareHertz);

		/// <summary>
		/// Divide by cubic SI.Hertz.
		/// </summary>
		public SIUnit PerCubicHertz => (SIUnit)(this / SI.CubicHertz);

		/// <summary>
		/// Multiply by SI.Ampere.
		/// </summary>
		public SIUnit Ampere => (SIUnit)(this * SI.Ampere);

		/// <summary>
		/// Multiply by square SI.Ampere.
		/// </summary>
		public SIUnit SquareAmpere => (SIUnit)(this * SI.SquareAmpere);

		/// <summary>
		/// Multiply by cubic SI.Ampere.
		/// </summary>
		public SIUnit CubicAmpere => (SIUnit)(this * SI.CubicAmpere);

		/// <summary>
		/// Divide by SI.Ampere.
		/// </summary>
		public SIUnit PerAmpere => (SIUnit)(this / SI.Ampere);

		/// <summary>
		/// Divide by square SI.Ampere.
		/// </summary>
		public SIUnit PerSquareAmpere => (SIUnit)(this / SI.SquareAmpere);

		/// <summary>
		/// Divide by cubic SI.Ampere.
		/// </summary>
		public SIUnit PerCubicAmpere => (SIUnit)(this / SI.CubicAmpere);

		/// <summary>
		/// Multiply by SI.Kelvin.
		/// </summary>
		public SIUnit Kelvin => (SIUnit)(this * SI.Kelvin);

		/// <summary>
		/// Multiply by square SI.Kelvin.
		/// </summary>
		public SIUnit SquareKelvin => (SIUnit)(this * SI.SquareKelvin);

		/// <summary>
		/// Multiply by cubic SI.Kelvin.
		/// </summary>
		public SIUnit CubicKelvin => (SIUnit)(this * SI.CubicKelvin);

		/// <summary>
		/// Divide by SI.Kelvin.
		/// </summary>
		public SIUnit PerKelvin => (SIUnit)(this / SI.Kelvin);

		/// <summary>
		/// Divide by square SI.Kelvin.
		/// </summary>
		public SIUnit PerSquareKelvin => (SIUnit)(this / SI.SquareKelvin);

		/// <summary>
		/// Divide by cubic SI.Kelvin.
		/// </summary>
		public SIUnit PerCubicKelvin => (SIUnit)(this / SI.CubicKelvin);

		/// <summary>
		/// Multiply by SI.Mole.
		/// </summary>
		public SIUnit Mole => (SIUnit)(this * SI.Mole);

		/// <summary>
		/// Multiply by square SI.Mole.
		/// </summary>
		public SIUnit SquareMole => (SIUnit)(this * SI.SquareMole);

		/// <summary>
		/// Multiply by cubic SI.Mole.
		/// </summary>
		public SIUnit CubicMole => (SIUnit)(this * SI.CubicMole);

		/// <summary>
		/// Divide by SI.Mole.
		/// </summary>
		public SIUnit PerMole => (SIUnit)(this / SI.Mole);

		/// <summary>
		/// Divide by square SI.Mole.
		/// </summary>
		public SIUnit PerSquareMole => (SIUnit)(this / SI.SquareMole);

		/// <summary>
		/// Divide by cubic SI.Mole.
		/// </summary>
		public SIUnit PerCubicMole => (SIUnit)(this / SI.CubicMole);

		/// <summary>
		/// Multiply by SI.Candela.
		/// </summary>
		public SIUnit Candela => (SIUnit)(this * SI.Candela);

		/// <summary>
		/// Multiply by square SI.Candela.
		/// </summary>
		public SIUnit SquareCandela => (SIUnit)(this * SI.SquareCandela);

		/// <summary>
		/// Multiply by cubic SI.Candela.
		/// </summary>
		public SIUnit CubicCandela => (SIUnit)(this * SI.CubicCandela);

		/// <summary>
		/// Divide by SI.Candela.
		/// </summary>
		public SIUnit PerCandela => (SIUnit)(this / SI.Candela);

		/// <summary>
		/// Divide by square SI.Candela.
		/// </summary>
		public SIUnit PerSquareCandela => (SIUnit)(this / SI.SquareCandela);

		/// <summary>
		/// Divide by cubic SI.Candela.
		/// </summary>
		public SIUnit PerCubicCandela => (SIUnit)(this / SI.CubicCandela);

		/// <summary>
		/// Multiply by SI.Joule.
		/// </summary>
		public SIUnit Joule => (SIUnit)(this * SI.Joule);

		/// <summary>
		/// Multiply by square SI.Joule.
		/// </summary>
		public SIUnit SquareJoule => (SIUnit)(this * SI.SquareJoule);

		/// <summary>
		/// Multiply by cubic SI.Joule.
		/// </summary>
		public SIUnit CubicJoule => (SIUnit)(this * SI.CubicJoule);

		/// <summary>
		/// Divide by SI.Joule.
		/// </summary>
		public SIUnit PerJoule => (SIUnit)(this / SI.Joule);

		/// <summary>
		/// Divide by square SI.Joule.
		/// </summary>
		public SIUnit PerSquareJoule => (SIUnit)(this / SI.SquareJoule);

		/// <summary>
		/// Divide by cubic SI.Joule.
		/// </summary>
		public SIUnit PerCubicJoule => (SIUnit)(this / SI.CubicJoule);

		/// <summary>
		/// Multiply by SI.Watt.
		/// </summary>
		public SIUnit Watt => (SIUnit)(this * SI.Watt);

		/// <summary>
		/// Multiply by square SI.Watt.
		/// </summary>
		public SIUnit SquareWatt => (SIUnit)(this * SI.SquareWatt);

		/// <summary>
		/// Multiply by cubic SI.Watt.
		/// </summary>
		public SIUnit CubicWatt => (SIUnit)(this * SI.CubicWatt);

		/// <summary>
		/// Divide by SI.Watt.
		/// </summary>
		public SIUnit PerWatt => (SIUnit)(this / SI.Watt);

		/// <summary>
		/// Divide by square SI.Watt.
		/// </summary>
		public SIUnit PerSquareWatt => (SIUnit)(this / SI.SquareWatt);

		/// <summary>
		/// Divide by cubic SI.Watt.
		/// </summary>
		public SIUnit PerCubicWatt => (SIUnit)(this / SI.CubicWatt);

		/// <summary>
		/// Multiply by SI.Coulomb.
		/// </summary>
		public SIUnit Coulomb => (SIUnit)(this * SI.Coulomb);

		/// <summary>
		/// Multiply by square SI.Coulomb.
		/// </summary>
		public SIUnit SquareCoulomb => (SIUnit)(this * SI.SquareCoulomb);

		/// <summary>
		/// Multiply by cubic SI.Coulomb.
		/// </summary>
		public SIUnit CubicCoulomb => (SIUnit)(this * SI.CubicCoulomb);

		/// <summary>
		/// Divide by SI.Coulomb.
		/// </summary>
		public SIUnit PerCoulomb => (SIUnit)(this / SI.Coulomb);

		/// <summary>
		/// Divide by square SI.Coulomb.
		/// </summary>
		public SIUnit PerSquareCoulomb => (SIUnit)(this / SI.SquareCoulomb);

		/// <summary>
		/// Divide by cubic SI.Coulomb.
		/// </summary>
		public SIUnit PerCubicCoulomb => (SIUnit)(this / SI.CubicCoulomb);

		/// <summary>
		/// Multiply by SI.Volt.
		/// </summary>
		public SIUnit Volt => (SIUnit)(this * SI.Volt);

		/// <summary>
		/// Multiply by square SI.Volt.
		/// </summary>
		public SIUnit SquareVolt => (SIUnit)(this * SI.SquareVolt);

		/// <summary>
		/// Multiply by cubic SI.Volt.
		/// </summary>
		public SIUnit CubicVolt => (SIUnit)(this * SI.CubicVolt);

		/// <summary>
		/// Divide by SI.Volt.
		/// </summary>
		public SIUnit PerVolt => (SIUnit)(this / SI.Volt);

		/// <summary>
		/// Divide by square SI.Volt.
		/// </summary>
		public SIUnit PerSquareVolt => (SIUnit)(this / SI.SquareVolt);

		/// <summary>
		/// Divide by cubic SI.Volt.
		/// </summary>
		public SIUnit PerCubicVolt => (SIUnit)(this / SI.CubicVolt);

		/// <summary>
		/// Multiply by SI.Farad.
		/// </summary>
		public SIUnit Farad => (SIUnit)(this * SI.Farad);

		/// <summary>
		/// Multiply by square SI.Farad.
		/// </summary>
		public SIUnit SquareFarad => (SIUnit)(this * SI.SquareFarad);

		/// <summary>
		/// Multiply by cubic SI.Farad.
		/// </summary>
		public SIUnit CubicFarad => (SIUnit)(this * SI.CubicFarad);

		/// <summary>
		/// Divide by SI.Farad.
		/// </summary>
		public SIUnit PerFarad => (SIUnit)(this / SI.Farad);

		/// <summary>
		/// Divide by square SI.Farad.
		/// </summary>
		public SIUnit PerSquareFarad => (SIUnit)(this / SI.SquareFarad);

		/// <summary>
		/// Divide by cubic SI.Farad.
		/// </summary>
		public SIUnit PerCubicFarad => (SIUnit)(this / SI.CubicFarad);

		/// <summary>
		/// Multiply by SI.Ohm.
		/// </summary>
		public SIUnit Ohm => (SIUnit)(this * SI.Ohm);

		/// <summary>
		/// Multiply by square SI.Ohm.
		/// </summary>
		public SIUnit SquareOhm => (SIUnit)(this * SI.SquareOhm);

		/// <summary>
		/// Multiply by cubic SI.Ohm.
		/// </summary>
		public SIUnit CubicOhm => (SIUnit)(this * SI.CubicOhm);

		/// <summary>
		/// Divide by SI.Ohm.
		/// </summary>
		public SIUnit PerOhm => (SIUnit)(this / SI.Ohm);

		/// <summary>
		/// Divide by square SI.Ohm.
		/// </summary>
		public SIUnit PerSquareOhm => (SIUnit)(this / SI.SquareOhm);

		/// <summary>
		/// Divide by cubic SI.Ohm.
		/// </summary>
		public SIUnit PerCubicOhm => (SIUnit)(this / SI.CubicOhm);

		/// <summary>
		/// Multiply by SI.Siemens.
		/// </summary>
		public SIUnit Siemens => (SIUnit)(this * SI.Siemens);

		/// <summary>
		/// Multiply by square SI.Siemens.
		/// </summary>
		public SIUnit SquareSiemens => (SIUnit)(this * SI.SquareSiemens);

		/// <summary>
		/// Multiply by cubic SI.Siemens.
		/// </summary>
		public SIUnit CubicSiemens => (SIUnit)(this * SI.CubicSiemens);

		/// <summary>
		/// Divide by SI.Siemens.
		/// </summary>
		public SIUnit PerSiemens => (SIUnit)(this / SI.Siemens);

		/// <summary>
		/// Divide by square SI.Siemens.
		/// </summary>
		public SIUnit PerSquareSiemens => (SIUnit)(this / SI.SquareSiemens);

		/// <summary>
		/// Divide by cubic SI.Siemens.
		/// </summary>
		public SIUnit PerCubicSiemens => (SIUnit)(this / SI.CubicSiemens);

		/// <summary>
		/// Multiply by SI.Henry.
		/// </summary>
		public SIUnit Henry => (SIUnit)(this * SI.Henry);

		/// <summary>
		/// Multiply by square SI.Henry.
		/// </summary>
		public SIUnit SquareHenry => (SIUnit)(this * SI.SquareHenry);

		/// <summary>
		/// Multiply by cubic SI.Henry.
		/// </summary>
		public SIUnit CubicHenry => (SIUnit)(this * SI.CubicHenry);

		/// <summary>
		/// Divide by SI.Henry.
		/// </summary>
		public SIUnit PerHenry => (SIUnit)(this / SI.Henry);

		/// <summary>
		/// Divide by square SI.Henry.
		/// </summary>
		public SIUnit PerSquareHenry => (SIUnit)(this / SI.SquareHenry);

		/// <summary>
		/// Divide by cubic SI.Henry.
		/// </summary>
		public SIUnit PerCubicHenry => (SIUnit)(this / SI.CubicHenry);

		/// <summary>
		/// Multiply by SI.Weber.
		/// </summary>
		public SIUnit Weber => (SIUnit)(this * SI.Weber);

		/// <summary>
		/// Multiply by square SI.Weber.
		/// </summary>
		public SIUnit SquareWeber => (SIUnit)(this * SI.SquareWeber);

		/// <summary>
		/// Multiply by cubic SI.Weber.
		/// </summary>
		public SIUnit CubicWeber => (SIUnit)(this * SI.CubicWeber);

		/// <summary>
		/// Divide by SI.Weber.
		/// </summary>
		public SIUnit PerWeber => (SIUnit)(this / SI.Weber);

		/// <summary>
		/// Divide by square SI.Weber.
		/// </summary>
		public SIUnit PerSquareWeber => (SIUnit)(this / SI.SquareWeber);

		/// <summary>
		/// Divide by cubic SI.Weber.
		/// </summary>
		public SIUnit PerCubicWeber => (SIUnit)(this / SI.CubicWeber);

		/// <summary>
		/// Multiply by SI.Tesla.
		/// </summary>
		public SIUnit Tesla => (SIUnit)(this * SI.Tesla);

		/// <summary>
		/// Multiply by square SI.Tesla.
		/// </summary>
		public SIUnit SquareTesla => (SIUnit)(this * SI.SquareTesla);

		/// <summary>
		/// Multiply by cubic SI.Tesla.
		/// </summary>
		public SIUnit CubicTesla => (SIUnit)(this * SI.CubicTesla);

		/// <summary>
		/// Divide by SI.Tesla.
		/// </summary>
		public SIUnit PerTesla => (SIUnit)(this / SI.Tesla);

		/// <summary>
		/// Divide by square SI.Tesla.
		/// </summary>
		public SIUnit PerSquareTesla => (SIUnit)(this / SI.SquareTesla);

		/// <summary>
		/// Divide by cubic SI.Tesla.
		/// </summary>
		public SIUnit PerCubicTesla => (SIUnit)(this / SI.CubicTesla);

		/// <summary>
		/// Multiply by SI.Newton.
		/// </summary>
		public SIUnit Newton => (SIUnit)(this * SI.Newton);

		/// <summary>
		/// Multiply by square SI.Newton.
		/// </summary>
		public SIUnit SquareNewton => (SIUnit)(this * SI.SquareNewton);

		/// <summary>
		/// Multiply by cubic SI.Newton.
		/// </summary>
		public SIUnit CubicNewton => (SIUnit)(this * SI.CubicNewton);

		/// <summary>
		/// Divide by SI.Newton.
		/// </summary>
		public SIUnit PerNewton => (SIUnit)(this / SI.Newton);

		/// <summary>
		/// Divide by square SI.Newton.
		/// </summary>
		public SIUnit PerSquareNewton => (SIUnit)(this / SI.SquareNewton);

		/// <summary>
		/// Divide by cubic SI.Newton.
		/// </summary>
		public SIUnit PerCubicNewton => (SIUnit)(this / SI.CubicNewton);

		/// <summary>
		/// Multiply by SI.Pascal.
		/// </summary>
		public SIUnit Pascal => (SIUnit)(this * SI.Pascal);

		/// <summary>
		/// Multiply by square SI.Pascal.
		/// </summary>
		public SIUnit SquarePascal => (SIUnit)(this * SI.SquarePascal);

		/// <summary>
		/// Multiply by cubic SI.Pascal.
		/// </summary>
		public SIUnit CubicPascal => (SIUnit)(this * SI.CubicPascal);

		/// <summary>
		/// Divide by SI.Pascal.
		/// </summary>
		public SIUnit PerPascal => (SIUnit)(this / SI.Pascal);

		/// <summary>
		/// Divide by square SI.Pascal.
		/// </summary>
		public SIUnit PerSquarePascal => (SIUnit)(this / SI.SquarePascal);

		/// <summary>
		/// Divide by cubic SI.Pascal.
		/// </summary>
		public SIUnit PerCubicPascal => (SIUnit)(this / SI.CubicPascal);

		/// <summary>
		/// Multiply by SI.Lux.
		/// </summary>
		public SIUnit Lux => (SIUnit)(this * SI.Lux);

		/// <summary>
		/// Multiply by square SI.Lux.
		/// </summary>
		public SIUnit SquareLux => (SIUnit)(this * SI.SquareLux);

		/// <summary>
		/// Multiply by cubic SI.Lux.
		/// </summary>
		public SIUnit CubicLux => (SIUnit)(this * SI.CubicLux);

		/// <summary>
		/// Divide by SI.Lux.
		/// </summary>
		public SIUnit PerLux => (SIUnit)(this / SI.Lux);

		/// <summary>
		/// Divide by square SI.Lux.
		/// </summary>
		public SIUnit PerSquareLux => (SIUnit)(this / SI.SquareLux);

		/// <summary>
		/// Divide by cubic SI.Lux.
		/// </summary>
		public SIUnit PerCubicLux => (SIUnit)(this / SI.CubicLux);

	}
}
