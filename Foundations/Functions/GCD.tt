<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

/*
GCD.cs

<#@ include file="../../License.txt" #>

*/

using System;
using System.Numerics;

namespace Foundations
{
    /// <summary>
    /// Number-theoretic functions.
    /// </summary>
	public static partial class Numbers
    {
<#
MakeGCD("sbyte");
MakeGCD("byte");
MakeGCD("short");
MakeGCD("ushort");
MakeGCD("int");
MakeGCD("uint");
MakeGCD("long");
MakeGCD("ulong");
MakeGCD("BigInteger");
#>
    }
}
<#+
void MakeGCD(string T)
{
#>
        /// <summary>
        /// Greatest common divisor.
        /// </summary>
        public static <#= T #> GCD(<#= T #> p, <#= T #> q)
        {
            if (p == 0 || q == 0) return 0;
<#+ if (T[0] != 'u' && T[0] != 'b') 
{ #>
            (p, q) = (<#= T #>.Abs(p), <#= T #>.Abs(q));
<#+ } #>

            while (true)
            {
                var m = (<#= T #>)(p % q);
                if (m == 0) return q;
                p = q;
                q = m;
            }
        }

<#+
}
#>