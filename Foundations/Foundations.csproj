<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{C15ED2AD-444C-46DC-8313-8ED602FA0A11}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Foundations</RootNamespace>
    <AssemblyName>Foundations</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DocumentationFile>bin\Debug\Foundations.xml</DocumentationFile>
    <CodeAnalysisIgnoreGeneratedCode>false</CodeAnalysisIgnoreGeneratedCode>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DocumentationFile>bin\Release\Foundations.xml</DocumentationFile>
    <CodeAnalysisIgnoreGeneratedCode>false</CodeAnalysisIgnoreGeneratedCode>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Coding\CodeReader.cs" />
    <Compile Include="Constants.cs" />
    <Compile Include="Extensions\Array.cs" />
    <Compile Include="Functions\MixingFunctions.cs">
      <DependentUpon>MixingFunctions.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Coding\Bits.cs" />
    <Compile Include="Coding\Code.cs" />
    <Compile Include="Coding\EliasGamma.cs" />
    <Compile Include="Coding\CodeCategory.cs" />
    <Compile Include="Coding\IEncoding.cs" />
    <Compile Include="Extensions\ArrayExtensions.cs" />
    <Compile Include="Functions\NumberTheoretic\GCD.cs">
      <DependentUpon>GCD.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Functions\Poly.cs" />
    <Compile Include="Functions\Special\CarlsonSymmetric.cs">
      <DependentUpon>CarlsonSymmetric.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Functions\Special\Elliptic.cs">
      <DependentUpon>Elliptic.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Functions\Special\Jacobi.cs">
      <DependentUpon>Jacobi.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Functions\Special\MathExtensions.cs">
      <DependentUpon>MathExtensions.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Functions\Special\Special.cs">
      <DependentUpon>Special.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Functions\Special\Theta.cs">
      <DependentUpon>Theta.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Statistics\Gaussian.cs" />
    <Compile Include="Statistics\Histogram.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Histogram.tt</DependentUpon>
    </Compile>
    <Compile Include="Statistics\IContinuousProbabilityDistribution.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="RandomNumbers\IRandomSource.cs" />
    <Compile Include="RandomNumbers\Generator.cs">
      <DependentUpon>Generator.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="RandomNumbers\StreamSource.cs" />
    <Compile Include="RandomNumbers\SHA256RandomSource.cs" />
    <Compile Include="RandomNumbers\SynchronizedRandomSource.cs" />
    <Compile Include="RandomNumbers\SystemRandomSource.cs" />
    <Compile Include="RandomNumbers\XorShiftRandomSource.cs" />
    <Compile Include="Types\ContinuedFraction.cs" />
    <Compile Include="Types\Rational.cs" />
    <Compile Include="Types\ValueUnion.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ValueUnion.tt</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Content Include="Functions\MixingFunctions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MixingFunctions.cs</LastGenOutput>
    </Content>
    <Content Include="Functions\NumberTheoretic\GCD.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>GCD.cs</LastGenOutput>
    </Content>
    <Content Include="Functions\Special\CarlsonSymmetric.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>CarlsonSymmetric.cs</LastGenOutput>
    </Content>
    <Content Include="Functions\Special\Elliptic.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Elliptic.cs</LastGenOutput>
    </Content>
    <Content Include="Functions\Special\Jacobi.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Jacobi.cs</LastGenOutput>
    </Content>
    <Content Include="Functions\Special\MathExtensions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MathExtensions.cs</LastGenOutput>
    </Content>
    <Content Include="Functions\Special\Special.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Special.cs</LastGenOutput>
    </Content>
    <Content Include="Functions\Special\Theta.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Theta.cs</LastGenOutput>
    </Content>
    <Content Include="RandomNumbers\Generator.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Generator.cs</LastGenOutput>
    </Content>
    <Content Include="Statistics\Histogram.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Histogram.cs</LastGenOutput>
    </Content>
    <Content Include="Types\ValueUnion.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ValueUnion.cs</LastGenOutput>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>