
/*
UniversalCodeTests.cs

Copyright © 2016 Pluto Scarab Software. Most Rights Reserved.
Author: Bret Mulvey

This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License. 
To view a copy of this license, visit http://creativecommons.org/licenses/by-sa/4.0/.

THIS IS AN AUTO-GENERATED SOURCE FILE. DO NOT EDIT THIS FILE DIRECTLY.
INSTEAD, EDIT THE .tt FILE WITH THE SAME NAME AND RE-RUN THE TEXT TEMPLATING
FILE GENERATOR. IF YOU SAVE THE FILE IN VISUAL STUDIO IT WILL DO THIS FOR YOU.
*/

using System;
using Foundations.RandomNumbers;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Foundations.Coding
{
    /// <summary>
    /// 
    /// </summary>
    [TestClass]
    public class UniversalCodeTests
    {
        [TestMethod]
        public void EliasGammaTest()
        {
            EncodingTest(Codes.EliasGamma);
        }

        [TestMethod]
        public void EliasDeltaTest()
        {
            EncodingTest(Codes.EliasDelta);
        }

        private void EncodingTest(IEncoding<int, Code> encoding)
        {
            for (int i = encoding.MinEncodable; i < 5000; i++)
            {
                var code = encoding.GetCode(i);
                var value = encoding.GetValue(code);
                Assert.AreEqual(i, value);
            }

            for (int i = encoding.MaxEncodable - 5000; i > 0 && i <= encoding.MaxEncodable; i++)
            {
                var code = encoding.GetCode(i);
                var value = encoding.GetValue(code);
                Assert.AreEqual(i, value);
            }

            var rand = new Generator($"{encoding.GetType().Name}Test");

            for (int n = 0; n < 1000; n++)
            {
                int i = rand.Int32();
                if (i < encoding.MinEncodable || i > encoding.MaxEncodable) continue;
                var code = encoding.GetCode(i);
                var value = encoding.GetValue(code);
                Assert.AreEqual(i, value);
            }
        }
    }
}
